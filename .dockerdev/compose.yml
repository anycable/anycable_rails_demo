x-app: &app
  build:
    context: .
    args:
      RUBY_VERSION: '3.1.1'
      PG_MAJOR: '14'
      NODE_MAJOR: '16'
  environment: &env
    NODE_ENV: development
    RAILS_ENV: ${RAILS_ENV:-development}
  image: anycable-rails-demo-dev:2.0.0
  tmpfs:
    - /tmp
    - /app/tmp/pids

x-backend: &backend
  <<: *app
  stdin_open: true
  tty: true
  volumes:
    - ..:/app:cached
    - rails_cache:/app/tmp/cache
    - bundle:/usr/local/bundle
    - node_modules:/app/node_modules
    - assets:/app/public/assets
    - assets_builds:/app/app/assets/builds
    - history:/usr/local/hist
    - .psqlrc:/root/.psqlrc:ro
    - .bashrc:/root/.bashrc:ro
  environment: &backend_environment
    <<: *env
    REDIS_URL: redis://redis:6379/
    DATABASE_URL: postgres://postgres:postgres@postgres:5432
    BOOTSNAP_CACHE_DIR: /usr/local/bundle/_bootsnap
    WEBPACKER_DEV_SERVER_HOST: webpacker
    WEB_CONCURRENCY: ${WEB_CONCURRENCY:-1}
    HISTFILE: /app/log/.bash_history
    PSQL_HISTFILE: /app/log/.psql_history
    EDITOR: vi
    LOG: ${LOG:-0}
    ANYCABLE_DEBUG: ${ANYCABLE_DEBUG:-1}
    ACTION_CABLE_ADAPTER: ${ACTION_CABLE_ADAPTER:-anycable}
    ANYCABLE_RPC_HOST: 0.0.0.0:50051
    ANYCABLE_BROADCAST_ADAPTER: redis
    PROMETHEUS_EXPORTER_PORT: 5100
    CHROME_URL: http://chrome:3333
    EDITOR: vi
    LOG: ${LOG:-0}
  depends_on: &backend_depends_on
    postgres:
      condition: service_healthy
    redis:
      condition: service_healthy

services:
  rails:
    <<: *backend
    command: bundle exec rails

  web:
    <<: *backend
    command: bundle exec rails server -b 0.0.0.0
    ports:
      - '3000:3000'
    depends_on:
      <<: *backend_depends_on
      css:
        condition: service_started
      js:
        condition: service_started
      ws:
        condition: service_started
      anycable:
        condition: service_started

  # Separate definition for system tests to add Chrome as a dependency
  rspec_system:
    <<: *backend
    ports:
      - '3000:3000'
      - '50051'
    environment:
      <<: *backend_environment
      APP_HOST: anycable.test
      ANYCABLE_RPC_HOST: 0.0.0.0:50051
      CABLE_URL: "ws://ws.anycable.test:8080/cable"
    depends_on:
      <<: *backend_depends_on
      chrome:
        condition: service_started
      ws_test:
        condition: service_started
    networks:
      default:
        aliases:
          - anycable.test

  ws: &ws
    image: anycable/anycable-go:1.2
    ports:
      - '8080:8080'
    environment: &ws_environment
      ANYCABLE_HOST: "0.0.0.0"
      ANYCABLE_PORT: 8080
      ANYCABLE_REDIS_URL: redis://redis:6379/0
      ANYCABLE_RPC_HOST: anycable:50051
      ANYCABLE_DEBUG: ${ANYCABLE_DEBUG:-1}
      ANYCABLE_METRICS_HOST: "0.0.0.0"
      ANYCABLE_METRICS_PORT: 5100
      ANYCABLE_METRICS_HTTP: /metrics
    depends_on:
      redis:
        condition: service_healthy

  ws_test:
    <<: *ws
    ports:
      - '8080'
    environment:
      <<: *ws_environment
      ANYCABLE_RPC_HOST: anycable.test:50051
    networks:
      default:
        aliases:
          - ws.anycable.test

  anycable:
    <<: *backend
    command: bundle exec anycable
    environment:
      <<: *backend_environment
      ANYCABLE_REDIS_URL: redis://redis:6379/0
      ANYCABLE_RPC_HOST: 0.0.0.0:50051
      ANYCABLE_DEBUG: ${ANYCABLE_DEBUG:-1}
    ports:
      - '50051'
    depends_on:
      <<: *backend_depends_on
      ws:
        condition: service_started

  css:
    <<: *backend
    command: yarn build:css --watch

  js:
    <<: *backend
    command: yarn build --watch

  postgres:
    image: postgres:14.0
    volumes:
      - .psqlrc:/root/.psqlrc:ro
      - postgres:/var/lib/postgresql/data
      - history:/user/local/hist
    environment:
      POSTGRES_PASSWORD: postgres
      PSQL_HISTFILE: /user/local/hist/.psql_history
    ports:
      - 5432
    healthcheck:
      test: pg_isready -U postgres -h 127.0.0.1
      interval: 5s

  redis:
    image: redis:6.2-alpine
    volumes:
      - redis:/data
    ports:
      - 6379
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 30

  chrome:
    # Works on Apple M1
    image: barrenechea/browserless:latest
    ports:
      - '3333:3333'
    environment:
      PORT: 3333
      # Set connection timeout for debugging
      # https://docs.browserless.io/docs/docker.html#connection-timeout
      CONNECTION_TIMEOUT: 600000

  prometheus:
    image: prom/prometheus:v2.29.1
    volumes:
      - ./etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    command:
      - --config.file=/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:8.1.1
    ports:
      - "5000:3000"
    volumes:
      - ./etc/grafana/provisioning:/etc/grafana/provisioning
      - ./etc/grafana/dashboards:/var/lib/grafana/dashboards
      - grafana:/var/lib/grafana
    user: "472"
    depends_on:
      prometheus:
        condition: service_started
      cadvisor:
        condition: service_started

  # Collects runtime metrics from Docker containers (CPU, RAM, etc)
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    ports:
      - 8082:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

volumes:
  postgres:
  redis:
  bundle:
  node_modules:
  rails_cache:
  history:
  assets:
  assets_builds:
  grafana:
