name: System Tests

on:
  push:
    branches:
    - master
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      BUNDLE_JOBS: 4
      BUNDLE_RETRY: 3
      BUNDLE_FROZEN: true
      CI: true
      DATABASE_URL: postgres://postgres:postgres@localhost:5432
      CHROME_URL: http://localhost:3000
      ANYCABLE_RPC_HOST: 0.0.0.0:50051
      RAILS_ENV: test
    services:
      postgres:
        image: postgres:14.0
        env:
          POSTGRES_PASSWORD: postgres
        ports: ["5432:5432"]
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:6.2-alpine
        ports: ["6379:6379"]
        options: --health-cmd="redis-cli ping" --health-interval 1s --health-timeout 3s --health-retries 30
      chrome:
        image: browserless/chrome:1.31-chrome-stable
        ports: ["3000:3000"]
        options: -e CONNECTION_TIMEOUT=600000
      anycable:
        image: anycable/anycable-go:1.2
        ports: ["8080:8080"]
        options: --add-host=host.docker.internal:host-gateway
        env:
          ANYCABLE_HOST: "0.0.0.0"
          ANYCABLE_REDIS_URL: redis://redis:6379/0
          ANYCABLE_RPC_HOST: host.docker.internal:50051
    steps:
      - uses: actions/checkout@v3
      - name: Install PostgreSQL client
        run: |
          sudo apt-get -yqq install libpq-dev
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.1
          bundler: 2.2.33
          bundler-cache: true
      - uses: actions/setup-node@v1
        with:
          node-version: '16.x'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-
      - name: Yarn install
        run: |
          yarn install
      - name: Run RSpec
        run: |
          bundle exec rails db:test:prepare
          export CABLE_URL="ws://$(hostname):8080/cable"
          bundle exec rspec --tag type:system --force-color
