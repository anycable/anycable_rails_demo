version: '2.4'

x-app: &app
  build:
    context: .
    dockerfile: ./.dockerdev/Dockerfile
    args:
      RUBY_VERSION: '3.0.1'
      PG_MAJOR: '13'
      NODE_MAJOR: '12'
      YARN_VERSION: '1.13.0'
      BUNDLER_VERSION: '2.2.15'
  environment: &env
    NODE_ENV: development
    RAILS_ENV: ${RAILS_ENV:-development}
  image: anycable-rails-demo-dev:1.3.0
  tmpfs:
    - /tmp

x-backend: &backend
  <<: *app
  stdin_open: true
  tty: true
  volumes:
    - .:/app:cached
    - ${ANYCABLE_CLIENT_PATH}:/app/vendor/anycable-client
    - rails_cache:/app/tmp/cache
    - bundle:/usr/local/bundle
    - node_modules:/app/node_modules
    - packs:/app/public/packs
    - packs-test:/app/public/packs-test
    - .dockerdev/.psqlrc:/root/.psqlrc:ro
    - .dockerdev/.bashrc:/root/.bashrc:ro
    - .dockerdev/.pryrc:/root/.pryrc:ro
  environment: &backend_environment
    <<: *env
    REDIS_URL: redis://redis:6379/
    DATABASE_URL: postgres://postgres:postgres@postgres:5432
    CHROME_URL: http://chrome:3333
    BOOTSNAP_CACHE_DIR: /usr/local/bundle/_bootsnap
    WEBPACKER_DEV_SERVER_HOST: webpacker
    WEB_CONCURRENCY: 1
    HISTFILE: /app/log/.bash_history
    PSQL_HISTFILE: /app/log/.psql_history
    EDITOR: vi
    LOG: ${LOG:-0}
    ACTION_CABLE_ADAPTER: ${ACTION_CABLE_ADAPTER:-anycable}
  depends_on: &backend_depends_on
    postgres:
      condition: service_healthy
    redis:
      condition: service_healthy

services:
  rails:
    <<: *backend
    command: bundle exec rails server -b 0.0.0.0
    ports:
      - '3000:3000'

  # Separate definition for system tests to add Chrome as a dependency
  rspec_system:
    <<: *backend
    ports:
      - '3000:3000'
      - '50051'
    environment:
      <<: *backend_environment
      APP_HOST: anycable.test
      ANYCABLE_RPC_HOST: 0.0.0.0:50051
      CABLE_URL: "ws://ws.anycable.test:8080/cable"
    depends_on:
      <<: *backend_depends_on
      chrome:
        condition: service_started
      ws_test:
        condition: service_started
    networks:
      default:
        aliases:
          - anycable.test

  sidekiq:
    <<: *backend
    command: bundle exec sidekiq -C config/sidekiq.yml

  ws: &ws
    image: anycable/anycable-go:1.1
    ports:
      - '8080:8080'
    environment: &ws_environment
      ANYCABLE_HOST: "0.0.0.0"
      ANYCABLE_REDIS_URL: redis://redis:6379/0
      ANYCABLE_RPC_HOST: anycable:50051
      ANYCABLE_DEBUG: 1
    depends_on:
      redis:
        condition: service_healthy

  ws_test:
    <<: *ws
    ports:
      - '8080'
    environment:
      <<: *ws_environment
      ANYCABLE_RPC_HOST: anycable.test:50051
    networks:
      default:
        aliases:
          - ws.anycable.test

  anycable:
    <<: *backend
    command: bundle exec anycable
    environment:
      <<: *backend_environment
      ANYCABLE_REDIS_URL: redis://redis:6379/0
      ANYCABLE_RPC_HOST: 0.0.0.0:50051
      ANYCABLE_DEBUG: 1
    ports:
      - '50051'
    depends_on:
      <<: *backend_depends_on
      ws:
        condition: service_started

  postgres:
    image: postgres:13.0
    volumes:
      - .dockerdev/.psqlrc:/root/.psqlrc:ro
      - postgres:/var/lib/postgresql/data
      - ./log:/root/log:cached
    environment:
      POSTGRES_PASSWORD: postgres
      PSQL_HISTFILE: /root/log/.psql_history
    ports:
      - 5432
    healthcheck:
      test: pg_isready -U postgres -h 127.0.0.1
      interval: 5s

  redis:
    image: redis:5.0-alpine
    volumes:
      - redis:/data
    ports:
      - 6379
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 30

  webpacker:
    <<: *app
    command: bundle exec ./bin/webpack-dev-server
    ports:
      - '3035:3035'
      - 3036
    volumes:
      - .:/app:cached
      - ${ANYCABLE_CLIENT_PATH}:/app/vendor/anycable-client
      - bundle:/usr/local/bundle
      - node_modules:/app/node_modules
      - packs:/app/public/packs
      - packs-test:/app/public/packs-test
    environment:
      <<: *env
      WEBPACKER_DEV_SERVER_HOST: 0.0.0.0

  chrome:
    image: browserless/chrome:1.31-chrome-stable
    ports:
      - '3333:3333'
    environment:
      PORT: 3333
      # Set connection timeout for debugging
      # https://docs.browserless.io/docs/docker.html#connection-timeout
      CONNECTION_TIMEOUT: 600000

volumes:
  postgres:
  redis:
  bundle:
  node_modules:
  rails_cache:
  packs:
  packs-test:
